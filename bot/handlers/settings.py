from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.database.engine import AsyncSessionLocal
from bot.database.crud import get_user_by_telegram_id
import structlog

router = Router()
logger = structlog.get_logger(__name__)


@router.message(Command("settings"))
async def cmd_settings(message: Message):
    """Handle /settings command"""
    async with AsyncSessionLocal() as session:
        user = await get_user_by_telegram_id(session, message.from_user.id)

        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /start")
            return

        gender_emoji = "üë®" if user.gender == "male" else "üë©" if user.gender == "female" else "‚ùì"
        gender_text = "–ú—É–∂—Å–∫–æ–π" if user.gender == "male" else "–ñ–µ–Ω—Å–∫–∏–π" if user.gender == "female" else "–ù–µ —É–∫–∞–∑–∞–Ω"

        settings_text = f"""‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</b>

<b>–ü–æ–ª:</b> {gender_emoji} {gender_text}

–ü–æ–ª –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ç–∏–ª—å –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º."""

        builder = InlineKeyboardBuilder()
        builder.button(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª", callback_data="change_gender")
        builder.adjust(1)

        await message.answer(
            settings_text,
            reply_markup=builder.as_markup(),
            parse_mode="HTML"
        )


@router.callback_query(F.data == "change_gender")
async def handle_change_gender(callback: CallbackQuery):
    """Handle gender change request"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üë® –ú—É–∂—Å–∫–æ–π", callback_data="set_gender_male")
    builder.button(text="üë© –ñ–µ–Ω—Å–∫–∏–π", callback_data="set_gender_female")
    builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings")
    builder.adjust(2, 1)

    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª:",
        reply_markup=builder.as_markup()
    )
    await callback.answer()


@router.callback_query(F.data.startswith("set_gender_"))
async def handle_set_gender(callback: CallbackQuery):
    """Handle gender setting"""
    new_gender = "male" if callback.data == "set_gender_male" else "female"

    async with AsyncSessionLocal() as session:
        user = await get_user_by_telegram_id(session, callback.from_user.id)
        if user:
            user.gender = new_gender
            await session.commit()
            logger.info(f"User {user.telegram_id} changed gender to: {new_gender}")

    gender_text = "–º—É–∂—Å–∫–æ–π" if new_gender == "male" else "–∂–µ–Ω—Å–∫–∏–π"
    await callback.message.edit_text(
        f"‚úÖ –ü–æ–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {gender_text}!\n\n"
        f"–¢–µ–ø–µ—Ä—å –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º –±—É–¥–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ —Ç–≤–æ–π —Å—Ç–∏–ª—å."
    )
    await callback.answer()


@router.callback_query(F.data == "back_to_settings")
async def handle_back_to_settings(callback: CallbackQuery):
    """Go back to settings menu"""
    async with AsyncSessionLocal() as session:
        user = await get_user_by_telegram_id(session, callback.from_user.id)

        if not user:
            await callback.message.edit_text("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /start")
            await callback.answer()
            return

        gender_emoji = "üë®" if user.gender == "male" else "üë©" if user.gender == "female" else "‚ùì"
        gender_text = "–ú—É–∂—Å–∫–æ–π" if user.gender == "male" else "–ñ–µ–Ω—Å–∫–∏–π" if user.gender == "female" else "–ù–µ —É–∫–∞–∑–∞–Ω"

        settings_text = f"""‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</b>

<b>–ü–æ–ª:</b> {gender_emoji} {gender_text}

–ü–æ–ª –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ç–∏–ª—å –∞–Ω–∞–ª–∏–∑–∞ –∏ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º."""

        builder = InlineKeyboardBuilder()
        builder.button(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª", callback_data="change_gender")
        builder.adjust(1)

        await callback.message.edit_text(
            settings_text,
            reply_markup=builder.as_markup(),
            parse_mode="HTML"
        )
        await callback.answer()
