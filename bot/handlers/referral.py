"""Referral system handlers"""
from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from bot.database.engine import AsyncSessionLocal
from bot.database.crud import get_or_create_user
from bot.database.crud_subscriptions import create_referral_code, get_referral_stats
import structlog

logger = structlog.get_logger()
router = Router()


@router.message(Command("referral"))
async def handle_referral_command(message: Message):
    """Handle /referral command - show referral stats and link"""
    telegram_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

    try:
        async with AsyncSessionLocal() as session:
            # Get or create user
            user = await get_or_create_user(
                session, telegram_id, username, first_name
            )

            # Generate or get existing referral code
            referral_code = await create_referral_code(session, user.id)

            # Get referral statistics
            stats = await get_referral_stats(session, user.id)

            # Get bot username for referral link
            bot_me = await message.bot.me()
            bot_username = bot_me.username
            referral_link = f"https://t.me/{bot_username}?start=ref_{referral_code}"

            # Format message
            text = (
                f"üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
                f"–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã!\n\n"
                f"üë• <b>–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
                f"‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {stats['total_referrals']}\n"
                f"‚Ä¢ –ü–æ–ª—É—á–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: +{stats['total_rewards']} —Ä–µ—à–µ–Ω–∏–π\n\n"
                f"üéØ <b>–£—Å–ª–æ–≤–∏—è:</b>\n"
                f"‚Ä¢ –¢–≤–æ–π –¥—Ä—É–≥ –ø–æ–ª—É—á–∏—Ç +1 –±–æ–Ω—É—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ\n"
                f"‚Ä¢ –¢—ã –ø–æ–ª—É—á–∏—à—å +1 —Ä–µ—à–µ–Ω–∏–µ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞\n\n"
                f"üîó <b>–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n"
                f"<code>{referral_link}</code>\n\n"
                f"–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —ç—Ç—É —Å—Å—ã–ª–∫—É –¥—Ä—É–≥—É!"
            )

            # Create share button
            share_text = f"–ü–æ–ø—Ä–æ–±—É–π –ú–æ–∑–≥–æ–ë–æ—Ç - AI-–∫–æ—É—á –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º! üöÄ\n–ü–æ–ª—É—á–∏ +1 –±–æ–Ω—É—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ: {referral_link}"
            share_url = f"https://t.me/share/url?url={referral_link}&text={share_text}"

            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–º",
                    url=share_url
                )]
            ])

            await message.answer(text, reply_markup=keyboard, parse_mode="HTML")

    except Exception as e:
        logger.error("referral_command_error", error=str(e), user_id=telegram_id)
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã. "
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
